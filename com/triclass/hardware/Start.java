// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hardware/course_start.proto

package com.triclass.hardware;

/**
 * <pre>
 * 开始会议
 * </pre>
 *
 * Protobuf type {@code triclass.hardware.Start}
 */
public final class Start extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:triclass.hardware.Start)
    StartOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Start.newBuilder() to construct.
  private Start(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Start() {
    id_ = "";
    subject_ = "";
    pushUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Start();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Start(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            id_ = s;
            break;
          }
          case 18: {
            com.triclass.hardware.Password.Builder subBuilder = null;
            if (((bitField0_ & 0x00000001) != 0)) {
              subBuilder = password_.toBuilder();
            }
            password_ = input.readMessage(com.triclass.hardware.Password.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(password_);
              password_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000001;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            subject_ = s;
            break;
          }
          case 34: {
            com.triclass.Timestamp.Builder subBuilder = null;
            if (timestamp_ != null) {
              subBuilder = timestamp_.toBuilder();
            }
            timestamp_ = input.readMessage(com.triclass.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(timestamp_);
              timestamp_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              pushUrl_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000002;
            }
            pushUrl_.add(s);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        pushUrl_ = pushUrl_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.triclass.hardware.CourseStart.internal_static_triclass_hardware_Start_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.triclass.hardware.CourseStart.internal_static_triclass_hardware_Start_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.triclass.hardware.Start.class, com.triclass.hardware.Start.Builder.class);
  }

  private int bitField0_;
  public static final int ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object id_;
  /**
   * <pre>
   * 会议编号
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 会议编号
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    java.lang.Object ref = id_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PASSWORD_FIELD_NUMBER = 2;
  private com.triclass.hardware.Password password_;
  /**
   * <pre>
   * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
   * 此字段可以为空，如果为空，表示开启会议不需要密码
   * </pre>
   *
   * <code>.triclass.hardware.Password password = 2;</code>
   * @return Whether the password field is set.
   */
  @java.lang.Override
  public boolean hasPassword() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
   * 此字段可以为空，如果为空，表示开启会议不需要密码
   * </pre>
   *
   * <code>.triclass.hardware.Password password = 2;</code>
   * @return The password.
   */
  @java.lang.Override
  public com.triclass.hardware.Password getPassword() {
    return password_ == null ? com.triclass.hardware.Password.getDefaultInstance() : password_;
  }
  /**
   * <pre>
   * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
   * 此字段可以为空，如果为空，表示开启会议不需要密码
   * </pre>
   *
   * <code>.triclass.hardware.Password password = 2;</code>
   */
  @java.lang.Override
  public com.triclass.hardware.PasswordOrBuilder getPasswordOrBuilder() {
    return password_ == null ? com.triclass.hardware.Password.getDefaultInstance() : password_;
  }

  public static final int SUBJECT_FIELD_NUMBER = 3;
  private volatile java.lang.Object subject_;
  /**
   * <pre>
   * 会议主题
   * </pre>
   *
   * <code>string subject = 3;</code>
   * @return The subject.
   */
  @java.lang.Override
  public java.lang.String getSubject() {
    java.lang.Object ref = subject_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      subject_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 会议主题
   * </pre>
   *
   * <code>string subject = 3;</code>
   * @return The bytes for subject.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSubjectBytes() {
    java.lang.Object ref = subject_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      subject_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 4;
  private com.triclass.Timestamp timestamp_;
  /**
   * <pre>
   * 时间戳，定义会议的开始时间和结束时间
   * </pre>
   *
   * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
   * @return Whether the timestamp field is set.
   */
  @java.lang.Override
  public boolean hasTimestamp() {
    return timestamp_ != null;
  }
  /**
   * <pre>
   * 时间戳，定义会议的开始时间和结束时间
   * </pre>
   *
   * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
   * @return The timestamp.
   */
  @java.lang.Override
  public com.triclass.Timestamp getTimestamp() {
    return timestamp_ == null ? com.triclass.Timestamp.getDefaultInstance() : timestamp_;
  }
  /**
   * <pre>
   * 时间戳，定义会议的开始时间和结束时间
   * </pre>
   *
   * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
   */
  @java.lang.Override
  public com.triclass.TimestampOrBuilder getTimestampOrBuilder() {
    return getTimestamp();
  }

  public static final int PUSH_URL_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList pushUrl_;
  /**
   * <pre>
   * 直播推流地址
   * </pre>
   *
   * <code>repeated string push_url = 5;</code>
   * @return A list containing the pushUrl.
   */
  public com.google.protobuf.ProtocolStringList
      getPushUrlList() {
    return pushUrl_;
  }
  /**
   * <pre>
   * 直播推流地址
   * </pre>
   *
   * <code>repeated string push_url = 5;</code>
   * @return The count of pushUrl.
   */
  public int getPushUrlCount() {
    return pushUrl_.size();
  }
  /**
   * <pre>
   * 直播推流地址
   * </pre>
   *
   * <code>repeated string push_url = 5;</code>
   * @param index The index of the element to return.
   * @return The pushUrl at the given index.
   */
  public java.lang.String getPushUrl(int index) {
    return pushUrl_.get(index);
  }
  /**
   * <pre>
   * 直播推流地址
   * </pre>
   *
   * <code>repeated string push_url = 5;</code>
   * @param index The index of the value to return.
   * @return The bytes of the pushUrl at the given index.
   */
  public com.google.protobuf.ByteString
      getPushUrlBytes(int index) {
    return pushUrl_.getByteString(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getPassword());
    }
    if (!getSubjectBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, subject_);
    }
    if (timestamp_ != null) {
      output.writeMessage(4, getTimestamp());
    }
    for (int i = 0; i < pushUrl_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, pushUrl_.getRaw(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPassword());
    }
    if (!getSubjectBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, subject_);
    }
    if (timestamp_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getTimestamp());
    }
    {
      int dataSize = 0;
      for (int i = 0; i < pushUrl_.size(); i++) {
        dataSize += computeStringSizeNoTag(pushUrl_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getPushUrlList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.triclass.hardware.Start)) {
      return super.equals(obj);
    }
    com.triclass.hardware.Start other = (com.triclass.hardware.Start) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (hasPassword() != other.hasPassword()) return false;
    if (hasPassword()) {
      if (!getPassword()
          .equals(other.getPassword())) return false;
    }
    if (!getSubject()
        .equals(other.getSubject())) return false;
    if (hasTimestamp() != other.hasTimestamp()) return false;
    if (hasTimestamp()) {
      if (!getTimestamp()
          .equals(other.getTimestamp())) return false;
    }
    if (!getPushUrlList()
        .equals(other.getPushUrlList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    if (hasPassword()) {
      hash = (37 * hash) + PASSWORD_FIELD_NUMBER;
      hash = (53 * hash) + getPassword().hashCode();
    }
    hash = (37 * hash) + SUBJECT_FIELD_NUMBER;
    hash = (53 * hash) + getSubject().hashCode();
    if (hasTimestamp()) {
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + getTimestamp().hashCode();
    }
    if (getPushUrlCount() > 0) {
      hash = (37 * hash) + PUSH_URL_FIELD_NUMBER;
      hash = (53 * hash) + getPushUrlList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.triclass.hardware.Start parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.triclass.hardware.Start parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.triclass.hardware.Start parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.triclass.hardware.Start parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.triclass.hardware.Start parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.triclass.hardware.Start parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.triclass.hardware.Start parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.triclass.hardware.Start parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.triclass.hardware.Start parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.triclass.hardware.Start parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.triclass.hardware.Start parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.triclass.hardware.Start parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.triclass.hardware.Start prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 开始会议
   * </pre>
   *
   * Protobuf type {@code triclass.hardware.Start}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:triclass.hardware.Start)
      com.triclass.hardware.StartOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.triclass.hardware.CourseStart.internal_static_triclass_hardware_Start_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.triclass.hardware.CourseStart.internal_static_triclass_hardware_Start_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.triclass.hardware.Start.class, com.triclass.hardware.Start.Builder.class);
    }

    // Construct using com.triclass.hardware.Start.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getPasswordFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      id_ = "";

      if (passwordBuilder_ == null) {
        password_ = null;
      } else {
        passwordBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      subject_ = "";

      if (timestampBuilder_ == null) {
        timestamp_ = null;
      } else {
        timestamp_ = null;
        timestampBuilder_ = null;
      }
      pushUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.triclass.hardware.CourseStart.internal_static_triclass_hardware_Start_descriptor;
    }

    @java.lang.Override
    public com.triclass.hardware.Start getDefaultInstanceForType() {
      return com.triclass.hardware.Start.getDefaultInstance();
    }

    @java.lang.Override
    public com.triclass.hardware.Start build() {
      com.triclass.hardware.Start result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.triclass.hardware.Start buildPartial() {
      com.triclass.hardware.Start result = new com.triclass.hardware.Start(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.id_ = id_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        if (passwordBuilder_ == null) {
          result.password_ = password_;
        } else {
          result.password_ = passwordBuilder_.build();
        }
        to_bitField0_ |= 0x00000001;
      }
      result.subject_ = subject_;
      if (timestampBuilder_ == null) {
        result.timestamp_ = timestamp_;
      } else {
        result.timestamp_ = timestampBuilder_.build();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        pushUrl_ = pushUrl_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.pushUrl_ = pushUrl_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.triclass.hardware.Start) {
        return mergeFrom((com.triclass.hardware.Start)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.triclass.hardware.Start other) {
      if (other == com.triclass.hardware.Start.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        onChanged();
      }
      if (other.hasPassword()) {
        mergePassword(other.getPassword());
      }
      if (!other.getSubject().isEmpty()) {
        subject_ = other.subject_;
        onChanged();
      }
      if (other.hasTimestamp()) {
        mergeTimestamp(other.getTimestamp());
      }
      if (!other.pushUrl_.isEmpty()) {
        if (pushUrl_.isEmpty()) {
          pushUrl_ = other.pushUrl_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensurePushUrlIsMutable();
          pushUrl_.addAll(other.pushUrl_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.triclass.hardware.Start parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.triclass.hardware.Start) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object id_ = "";
    /**
     * <pre>
     * 会议编号
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 会议编号
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 会议编号
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      id_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 会议编号
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      
      id_ = getDefaultInstance().getId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 会议编号
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      id_ = value;
      onChanged();
      return this;
    }

    private com.triclass.hardware.Password password_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Password, com.triclass.hardware.Password.Builder, com.triclass.hardware.PasswordOrBuilder> passwordBuilder_;
    /**
     * <pre>
     * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
     * 此字段可以为空，如果为空，表示开启会议不需要密码
     * </pre>
     *
     * <code>.triclass.hardware.Password password = 2;</code>
     * @return Whether the password field is set.
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
     * 此字段可以为空，如果为空，表示开启会议不需要密码
     * </pre>
     *
     * <code>.triclass.hardware.Password password = 2;</code>
     * @return The password.
     */
    public com.triclass.hardware.Password getPassword() {
      if (passwordBuilder_ == null) {
        return password_ == null ? com.triclass.hardware.Password.getDefaultInstance() : password_;
      } else {
        return passwordBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
     * 此字段可以为空，如果为空，表示开启会议不需要密码
     * </pre>
     *
     * <code>.triclass.hardware.Password password = 2;</code>
     */
    public Builder setPassword(com.triclass.hardware.Password value) {
      if (passwordBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        password_ = value;
        onChanged();
      } else {
        passwordBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
     * 此字段可以为空，如果为空，表示开启会议不需要密码
     * </pre>
     *
     * <code>.triclass.hardware.Password password = 2;</code>
     */
    public Builder setPassword(
        com.triclass.hardware.Password.Builder builderForValue) {
      if (passwordBuilder_ == null) {
        password_ = builderForValue.build();
        onChanged();
      } else {
        passwordBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
     * 此字段可以为空，如果为空，表示开启会议不需要密码
     * </pre>
     *
     * <code>.triclass.hardware.Password password = 2;</code>
     */
    public Builder mergePassword(com.triclass.hardware.Password value) {
      if (passwordBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
            password_ != null &&
            password_ != com.triclass.hardware.Password.getDefaultInstance()) {
          password_ =
            com.triclass.hardware.Password.newBuilder(password_).mergeFrom(value).buildPartial();
        } else {
          password_ = value;
        }
        onChanged();
      } else {
        passwordBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000001;
      return this;
    }
    /**
     * <pre>
     * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
     * 此字段可以为空，如果为空，表示开启会议不需要密码
     * </pre>
     *
     * <code>.triclass.hardware.Password password = 2;</code>
     */
    public Builder clearPassword() {
      if (passwordBuilder_ == null) {
        password_ = null;
        onChanged();
      } else {
        passwordBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000001);
      return this;
    }
    /**
     * <pre>
     * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
     * 此字段可以为空，如果为空，表示开启会议不需要密码
     * </pre>
     *
     * <code>.triclass.hardware.Password password = 2;</code>
     */
    public com.triclass.hardware.Password.Builder getPasswordBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getPasswordFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
     * 此字段可以为空，如果为空，表示开启会议不需要密码
     * </pre>
     *
     * <code>.triclass.hardware.Password password = 2;</code>
     */
    public com.triclass.hardware.PasswordOrBuilder getPasswordOrBuilder() {
      if (passwordBuilder_ != null) {
        return passwordBuilder_.getMessageOrBuilder();
      } else {
        return password_ == null ?
            com.triclass.hardware.Password.getDefaultInstance() : password_;
      }
    }
    /**
     * <pre>
     * 密码控制，如果密码有值，开启会议时需要输入对应的密码才可以加入会议
     * 此字段可以为空，如果为空，表示开启会议不需要密码
     * </pre>
     *
     * <code>.triclass.hardware.Password password = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Password, com.triclass.hardware.Password.Builder, com.triclass.hardware.PasswordOrBuilder> 
        getPasswordFieldBuilder() {
      if (passwordBuilder_ == null) {
        passwordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.triclass.hardware.Password, com.triclass.hardware.Password.Builder, com.triclass.hardware.PasswordOrBuilder>(
                getPassword(),
                getParentForChildren(),
                isClean());
        password_ = null;
      }
      return passwordBuilder_;
    }

    private java.lang.Object subject_ = "";
    /**
     * <pre>
     * 会议主题
     * </pre>
     *
     * <code>string subject = 3;</code>
     * @return The subject.
     */
    public java.lang.String getSubject() {
      java.lang.Object ref = subject_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subject_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 会议主题
     * </pre>
     *
     * <code>string subject = 3;</code>
     * @return The bytes for subject.
     */
    public com.google.protobuf.ByteString
        getSubjectBytes() {
      java.lang.Object ref = subject_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subject_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 会议主题
     * </pre>
     *
     * <code>string subject = 3;</code>
     * @param value The subject to set.
     * @return This builder for chaining.
     */
    public Builder setSubject(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      subject_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 会议主题
     * </pre>
     *
     * <code>string subject = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSubject() {
      
      subject_ = getDefaultInstance().getSubject();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 会议主题
     * </pre>
     *
     * <code>string subject = 3;</code>
     * @param value The bytes for subject to set.
     * @return This builder for chaining.
     */
    public Builder setSubjectBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      subject_ = value;
      onChanged();
      return this;
    }

    private com.triclass.Timestamp timestamp_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.Timestamp, com.triclass.Timestamp.Builder, com.triclass.TimestampOrBuilder> timestampBuilder_;
    /**
     * <pre>
     * 时间戳，定义会议的开始时间和结束时间
     * </pre>
     *
     * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
     * @return Whether the timestamp field is set.
     */
    public boolean hasTimestamp() {
      return timestampBuilder_ != null || timestamp_ != null;
    }
    /**
     * <pre>
     * 时间戳，定义会议的开始时间和结束时间
     * </pre>
     *
     * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
     * @return The timestamp.
     */
    public com.triclass.Timestamp getTimestamp() {
      if (timestampBuilder_ == null) {
        return timestamp_ == null ? com.triclass.Timestamp.getDefaultInstance() : timestamp_;
      } else {
        return timestampBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 时间戳，定义会议的开始时间和结束时间
     * </pre>
     *
     * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
     */
    public Builder setTimestamp(com.triclass.Timestamp value) {
      if (timestampBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        timestamp_ = value;
        onChanged();
      } else {
        timestampBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 时间戳，定义会议的开始时间和结束时间
     * </pre>
     *
     * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
     */
    public Builder setTimestamp(
        com.triclass.Timestamp.Builder builderForValue) {
      if (timestampBuilder_ == null) {
        timestamp_ = builderForValue.build();
        onChanged();
      } else {
        timestampBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 时间戳，定义会议的开始时间和结束时间
     * </pre>
     *
     * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
     */
    public Builder mergeTimestamp(com.triclass.Timestamp value) {
      if (timestampBuilder_ == null) {
        if (timestamp_ != null) {
          timestamp_ =
            com.triclass.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
        } else {
          timestamp_ = value;
        }
        onChanged();
      } else {
        timestampBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 时间戳，定义会议的开始时间和结束时间
     * </pre>
     *
     * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
     */
    public Builder clearTimestamp() {
      if (timestampBuilder_ == null) {
        timestamp_ = null;
        onChanged();
      } else {
        timestamp_ = null;
        timestampBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 时间戳，定义会议的开始时间和结束时间
     * </pre>
     *
     * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
     */
    public com.triclass.Timestamp.Builder getTimestampBuilder() {
      
      onChanged();
      return getTimestampFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 时间戳，定义会议的开始时间和结束时间
     * </pre>
     *
     * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
     */
    public com.triclass.TimestampOrBuilder getTimestampOrBuilder() {
      if (timestampBuilder_ != null) {
        return timestampBuilder_.getMessageOrBuilder();
      } else {
        return timestamp_ == null ?
            com.triclass.Timestamp.getDefaultInstance() : timestamp_;
      }
    }
    /**
     * <pre>
     * 时间戳，定义会议的开始时间和结束时间
     * </pre>
     *
     * <code>.triclass.timestamp.Timestamp timestamp = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.Timestamp, com.triclass.Timestamp.Builder, com.triclass.TimestampOrBuilder> 
        getTimestampFieldBuilder() {
      if (timestampBuilder_ == null) {
        timestampBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.triclass.Timestamp, com.triclass.Timestamp.Builder, com.triclass.TimestampOrBuilder>(
                getTimestamp(),
                getParentForChildren(),
                isClean());
        timestamp_ = null;
      }
      return timestampBuilder_;
    }

    private com.google.protobuf.LazyStringList pushUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensurePushUrlIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        pushUrl_ = new com.google.protobuf.LazyStringArrayList(pushUrl_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <pre>
     * 直播推流地址
     * </pre>
     *
     * <code>repeated string push_url = 5;</code>
     * @return A list containing the pushUrl.
     */
    public com.google.protobuf.ProtocolStringList
        getPushUrlList() {
      return pushUrl_.getUnmodifiableView();
    }
    /**
     * <pre>
     * 直播推流地址
     * </pre>
     *
     * <code>repeated string push_url = 5;</code>
     * @return The count of pushUrl.
     */
    public int getPushUrlCount() {
      return pushUrl_.size();
    }
    /**
     * <pre>
     * 直播推流地址
     * </pre>
     *
     * <code>repeated string push_url = 5;</code>
     * @param index The index of the element to return.
     * @return The pushUrl at the given index.
     */
    public java.lang.String getPushUrl(int index) {
      return pushUrl_.get(index);
    }
    /**
     * <pre>
     * 直播推流地址
     * </pre>
     *
     * <code>repeated string push_url = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the pushUrl at the given index.
     */
    public com.google.protobuf.ByteString
        getPushUrlBytes(int index) {
      return pushUrl_.getByteString(index);
    }
    /**
     * <pre>
     * 直播推流地址
     * </pre>
     *
     * <code>repeated string push_url = 5;</code>
     * @param index The index to set the value at.
     * @param value The pushUrl to set.
     * @return This builder for chaining.
     */
    public Builder setPushUrl(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePushUrlIsMutable();
      pushUrl_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 直播推流地址
     * </pre>
     *
     * <code>repeated string push_url = 5;</code>
     * @param value The pushUrl to add.
     * @return This builder for chaining.
     */
    public Builder addPushUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePushUrlIsMutable();
      pushUrl_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 直播推流地址
     * </pre>
     *
     * <code>repeated string push_url = 5;</code>
     * @param values The pushUrl to add.
     * @return This builder for chaining.
     */
    public Builder addAllPushUrl(
        java.lang.Iterable<java.lang.String> values) {
      ensurePushUrlIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, pushUrl_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 直播推流地址
     * </pre>
     *
     * <code>repeated string push_url = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearPushUrl() {
      pushUrl_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 直播推流地址
     * </pre>
     *
     * <code>repeated string push_url = 5;</code>
     * @param value The bytes of the pushUrl to add.
     * @return This builder for chaining.
     */
    public Builder addPushUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensurePushUrlIsMutable();
      pushUrl_.add(value);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:triclass.hardware.Start)
  }

  // @@protoc_insertion_point(class_scope:triclass.hardware.Start)
  private static final com.triclass.hardware.Start DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.triclass.hardware.Start();
  }

  public static com.triclass.hardware.Start getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Start>
      PARSER = new com.google.protobuf.AbstractParser<Start>() {
    @java.lang.Override
    public Start parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Start(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Start> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Start> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.triclass.hardware.Start getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

