// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hardware/course.proto

package com.triclass.hardware;

/**
 * <pre>
 * 会议协议
 * </pre>
 *
 * Protobuf type {@code triclass.hardware.Course}
 */
public final class Course extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:triclass.hardware.Course)
    CourseOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Course.newBuilder() to construct.
  private Course(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Course() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Course();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Course(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.triclass.hardware.Start.Builder subBuilder = null;
            if (actionCase_ == 1) {
              subBuilder = ((com.triclass.hardware.Start) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.triclass.hardware.Start.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.triclass.hardware.Start) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 1;
            break;
          }
          case 18: {
            com.triclass.hardware.Terminate.Builder subBuilder = null;
            if (actionCase_ == 2) {
              subBuilder = ((com.triclass.hardware.Terminate) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.triclass.hardware.Terminate.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.triclass.hardware.Terminate) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 2;
            break;
          }
          case 26: {
            com.triclass.hardware.Video.Builder subBuilder = null;
            if (actionCase_ == 3) {
              subBuilder = ((com.triclass.hardware.Video) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.triclass.hardware.Video.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.triclass.hardware.Video) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 3;
            break;
          }
          case 34: {
            com.triclass.hardware.Microphone.Builder subBuilder = null;
            if (actionCase_ == 4) {
              subBuilder = ((com.triclass.hardware.Microphone) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.triclass.hardware.Microphone.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.triclass.hardware.Microphone) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 4;
            break;
          }
          case 42: {
            com.triclass.hardware.Audio.Builder subBuilder = null;
            if (actionCase_ == 5) {
              subBuilder = ((com.triclass.hardware.Audio) action_).toBuilder();
            }
            action_ =
                input.readMessage(com.triclass.hardware.Audio.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((com.triclass.hardware.Audio) action_);
              action_ = subBuilder.buildPartial();
            }
            actionCase_ = 5;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.triclass.hardware.CourseOuterClass.internal_static_triclass_hardware_Course_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.triclass.hardware.CourseOuterClass.internal_static_triclass_hardware_Course_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.triclass.hardware.Course.class, com.triclass.hardware.Course.Builder.class);
  }

  private int actionCase_ = 0;
  private java.lang.Object action_;
  public enum ActionCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    START(1),
    TERMINATE(2),
    VIDEO(3),
    MICROPHONE(4),
    AUDIO(5),
    ACTION_NOT_SET(0);
    private final int value;
    private ActionCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ActionCase valueOf(int value) {
      return forNumber(value);
    }

    public static ActionCase forNumber(int value) {
      switch (value) {
        case 1: return START;
        case 2: return TERMINATE;
        case 3: return VIDEO;
        case 4: return MICROPHONE;
        case 5: return AUDIO;
        case 0: return ACTION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ActionCase
  getActionCase() {
    return ActionCase.forNumber(
        actionCase_);
  }

  public static final int START_FIELD_NUMBER = 1;
  /**
   * <pre>
   * 开始会议
   * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
   * </pre>
   *
   * <code>.triclass.hardware.Start start = 1;</code>
   * @return Whether the start field is set.
   */
  @java.lang.Override
  public boolean hasStart() {
    return actionCase_ == 1;
  }
  /**
   * <pre>
   * 开始会议
   * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
   * </pre>
   *
   * <code>.triclass.hardware.Start start = 1;</code>
   * @return The start.
   */
  @java.lang.Override
  public com.triclass.hardware.Start getStart() {
    if (actionCase_ == 1) {
       return (com.triclass.hardware.Start) action_;
    }
    return com.triclass.hardware.Start.getDefaultInstance();
  }
  /**
   * <pre>
   * 开始会议
   * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
   * </pre>
   *
   * <code>.triclass.hardware.Start start = 1;</code>
   */
  @java.lang.Override
  public com.triclass.hardware.StartOrBuilder getStartOrBuilder() {
    if (actionCase_ == 1) {
       return (com.triclass.hardware.Start) action_;
    }
    return com.triclass.hardware.Start.getDefaultInstance();
  }

  public static final int TERMINATE_FIELD_NUMBER = 2;
  /**
   * <pre>
   * 结束会议
   * </pre>
   *
   * <code>.triclass.hardware.Terminate terminate = 2;</code>
   * @return Whether the terminate field is set.
   */
  @java.lang.Override
  public boolean hasTerminate() {
    return actionCase_ == 2;
  }
  /**
   * <pre>
   * 结束会议
   * </pre>
   *
   * <code>.triclass.hardware.Terminate terminate = 2;</code>
   * @return The terminate.
   */
  @java.lang.Override
  public com.triclass.hardware.Terminate getTerminate() {
    if (actionCase_ == 2) {
       return (com.triclass.hardware.Terminate) action_;
    }
    return com.triclass.hardware.Terminate.getDefaultInstance();
  }
  /**
   * <pre>
   * 结束会议
   * </pre>
   *
   * <code>.triclass.hardware.Terminate terminate = 2;</code>
   */
  @java.lang.Override
  public com.triclass.hardware.TerminateOrBuilder getTerminateOrBuilder() {
    if (actionCase_ == 2) {
       return (com.triclass.hardware.Terminate) action_;
    }
    return com.triclass.hardware.Terminate.getDefaultInstance();
  }

  public static final int VIDEO_FIELD_NUMBER = 3;
  /**
   * <pre>
   * 视频
   * </pre>
   *
   * <code>.triclass.hardware.Video video = 3;</code>
   * @return Whether the video field is set.
   */
  @java.lang.Override
  public boolean hasVideo() {
    return actionCase_ == 3;
  }
  /**
   * <pre>
   * 视频
   * </pre>
   *
   * <code>.triclass.hardware.Video video = 3;</code>
   * @return The video.
   */
  @java.lang.Override
  public com.triclass.hardware.Video getVideo() {
    if (actionCase_ == 3) {
       return (com.triclass.hardware.Video) action_;
    }
    return com.triclass.hardware.Video.getDefaultInstance();
  }
  /**
   * <pre>
   * 视频
   * </pre>
   *
   * <code>.triclass.hardware.Video video = 3;</code>
   */
  @java.lang.Override
  public com.triclass.hardware.VideoOrBuilder getVideoOrBuilder() {
    if (actionCase_ == 3) {
       return (com.triclass.hardware.Video) action_;
    }
    return com.triclass.hardware.Video.getDefaultInstance();
  }

  public static final int MICROPHONE_FIELD_NUMBER = 4;
  /**
   * <pre>
   * 麦克风
   * </pre>
   *
   * <code>.triclass.hardware.Microphone microphone = 4;</code>
   * @return Whether the microphone field is set.
   */
  @java.lang.Override
  public boolean hasMicrophone() {
    return actionCase_ == 4;
  }
  /**
   * <pre>
   * 麦克风
   * </pre>
   *
   * <code>.triclass.hardware.Microphone microphone = 4;</code>
   * @return The microphone.
   */
  @java.lang.Override
  public com.triclass.hardware.Microphone getMicrophone() {
    if (actionCase_ == 4) {
       return (com.triclass.hardware.Microphone) action_;
    }
    return com.triclass.hardware.Microphone.getDefaultInstance();
  }
  /**
   * <pre>
   * 麦克风
   * </pre>
   *
   * <code>.triclass.hardware.Microphone microphone = 4;</code>
   */
  @java.lang.Override
  public com.triclass.hardware.MicrophoneOrBuilder getMicrophoneOrBuilder() {
    if (actionCase_ == 4) {
       return (com.triclass.hardware.Microphone) action_;
    }
    return com.triclass.hardware.Microphone.getDefaultInstance();
  }

  public static final int AUDIO_FIELD_NUMBER = 5;
  /**
   * <pre>
   * 音频
   * </pre>
   *
   * <code>.triclass.hardware.Audio audio = 5;</code>
   * @return Whether the audio field is set.
   */
  @java.lang.Override
  public boolean hasAudio() {
    return actionCase_ == 5;
  }
  /**
   * <pre>
   * 音频
   * </pre>
   *
   * <code>.triclass.hardware.Audio audio = 5;</code>
   * @return The audio.
   */
  @java.lang.Override
  public com.triclass.hardware.Audio getAudio() {
    if (actionCase_ == 5) {
       return (com.triclass.hardware.Audio) action_;
    }
    return com.triclass.hardware.Audio.getDefaultInstance();
  }
  /**
   * <pre>
   * 音频
   * </pre>
   *
   * <code>.triclass.hardware.Audio audio = 5;</code>
   */
  @java.lang.Override
  public com.triclass.hardware.AudioOrBuilder getAudioOrBuilder() {
    if (actionCase_ == 5) {
       return (com.triclass.hardware.Audio) action_;
    }
    return com.triclass.hardware.Audio.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (actionCase_ == 1) {
      output.writeMessage(1, (com.triclass.hardware.Start) action_);
    }
    if (actionCase_ == 2) {
      output.writeMessage(2, (com.triclass.hardware.Terminate) action_);
    }
    if (actionCase_ == 3) {
      output.writeMessage(3, (com.triclass.hardware.Video) action_);
    }
    if (actionCase_ == 4) {
      output.writeMessage(4, (com.triclass.hardware.Microphone) action_);
    }
    if (actionCase_ == 5) {
      output.writeMessage(5, (com.triclass.hardware.Audio) action_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (actionCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (com.triclass.hardware.Start) action_);
    }
    if (actionCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (com.triclass.hardware.Terminate) action_);
    }
    if (actionCase_ == 3) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, (com.triclass.hardware.Video) action_);
    }
    if (actionCase_ == 4) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, (com.triclass.hardware.Microphone) action_);
    }
    if (actionCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.triclass.hardware.Audio) action_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.triclass.hardware.Course)) {
      return super.equals(obj);
    }
    com.triclass.hardware.Course other = (com.triclass.hardware.Course) obj;

    if (!getActionCase().equals(other.getActionCase())) return false;
    switch (actionCase_) {
      case 1:
        if (!getStart()
            .equals(other.getStart())) return false;
        break;
      case 2:
        if (!getTerminate()
            .equals(other.getTerminate())) return false;
        break;
      case 3:
        if (!getVideo()
            .equals(other.getVideo())) return false;
        break;
      case 4:
        if (!getMicrophone()
            .equals(other.getMicrophone())) return false;
        break;
      case 5:
        if (!getAudio()
            .equals(other.getAudio())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (actionCase_) {
      case 1:
        hash = (37 * hash) + START_FIELD_NUMBER;
        hash = (53 * hash) + getStart().hashCode();
        break;
      case 2:
        hash = (37 * hash) + TERMINATE_FIELD_NUMBER;
        hash = (53 * hash) + getTerminate().hashCode();
        break;
      case 3:
        hash = (37 * hash) + VIDEO_FIELD_NUMBER;
        hash = (53 * hash) + getVideo().hashCode();
        break;
      case 4:
        hash = (37 * hash) + MICROPHONE_FIELD_NUMBER;
        hash = (53 * hash) + getMicrophone().hashCode();
        break;
      case 5:
        hash = (37 * hash) + AUDIO_FIELD_NUMBER;
        hash = (53 * hash) + getAudio().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.triclass.hardware.Course parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.triclass.hardware.Course parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.triclass.hardware.Course parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.triclass.hardware.Course parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.triclass.hardware.Course parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.triclass.hardware.Course parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.triclass.hardware.Course parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.triclass.hardware.Course parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.triclass.hardware.Course parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.triclass.hardware.Course parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.triclass.hardware.Course parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.triclass.hardware.Course parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.triclass.hardware.Course prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 会议协议
   * </pre>
   *
   * Protobuf type {@code triclass.hardware.Course}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:triclass.hardware.Course)
      com.triclass.hardware.CourseOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.triclass.hardware.CourseOuterClass.internal_static_triclass_hardware_Course_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.triclass.hardware.CourseOuterClass.internal_static_triclass_hardware_Course_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.triclass.hardware.Course.class, com.triclass.hardware.Course.Builder.class);
    }

    // Construct using com.triclass.hardware.Course.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      actionCase_ = 0;
      action_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.triclass.hardware.CourseOuterClass.internal_static_triclass_hardware_Course_descriptor;
    }

    @java.lang.Override
    public com.triclass.hardware.Course getDefaultInstanceForType() {
      return com.triclass.hardware.Course.getDefaultInstance();
    }

    @java.lang.Override
    public com.triclass.hardware.Course build() {
      com.triclass.hardware.Course result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.triclass.hardware.Course buildPartial() {
      com.triclass.hardware.Course result = new com.triclass.hardware.Course(this);
      if (actionCase_ == 1) {
        if (startBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = startBuilder_.build();
        }
      }
      if (actionCase_ == 2) {
        if (terminateBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = terminateBuilder_.build();
        }
      }
      if (actionCase_ == 3) {
        if (videoBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = videoBuilder_.build();
        }
      }
      if (actionCase_ == 4) {
        if (microphoneBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = microphoneBuilder_.build();
        }
      }
      if (actionCase_ == 5) {
        if (audioBuilder_ == null) {
          result.action_ = action_;
        } else {
          result.action_ = audioBuilder_.build();
        }
      }
      result.actionCase_ = actionCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.triclass.hardware.Course) {
        return mergeFrom((com.triclass.hardware.Course)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.triclass.hardware.Course other) {
      if (other == com.triclass.hardware.Course.getDefaultInstance()) return this;
      switch (other.getActionCase()) {
        case START: {
          mergeStart(other.getStart());
          break;
        }
        case TERMINATE: {
          mergeTerminate(other.getTerminate());
          break;
        }
        case VIDEO: {
          mergeVideo(other.getVideo());
          break;
        }
        case MICROPHONE: {
          mergeMicrophone(other.getMicrophone());
          break;
        }
        case AUDIO: {
          mergeAudio(other.getAudio());
          break;
        }
        case ACTION_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.triclass.hardware.Course parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.triclass.hardware.Course) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int actionCase_ = 0;
    private java.lang.Object action_;
    public ActionCase
        getActionCase() {
      return ActionCase.forNumber(
          actionCase_);
    }

    public Builder clearAction() {
      actionCase_ = 0;
      action_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Start, com.triclass.hardware.Start.Builder, com.triclass.hardware.StartOrBuilder> startBuilder_;
    /**
     * <pre>
     * 开始会议
     * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
     * </pre>
     *
     * <code>.triclass.hardware.Start start = 1;</code>
     * @return Whether the start field is set.
     */
    @java.lang.Override
    public boolean hasStart() {
      return actionCase_ == 1;
    }
    /**
     * <pre>
     * 开始会议
     * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
     * </pre>
     *
     * <code>.triclass.hardware.Start start = 1;</code>
     * @return The start.
     */
    @java.lang.Override
    public com.triclass.hardware.Start getStart() {
      if (startBuilder_ == null) {
        if (actionCase_ == 1) {
          return (com.triclass.hardware.Start) action_;
        }
        return com.triclass.hardware.Start.getDefaultInstance();
      } else {
        if (actionCase_ == 1) {
          return startBuilder_.getMessage();
        }
        return com.triclass.hardware.Start.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 开始会议
     * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
     * </pre>
     *
     * <code>.triclass.hardware.Start start = 1;</code>
     */
    public Builder setStart(com.triclass.hardware.Start value) {
      if (startBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        startBuilder_.setMessage(value);
      }
      actionCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 开始会议
     * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
     * </pre>
     *
     * <code>.triclass.hardware.Start start = 1;</code>
     */
    public Builder setStart(
        com.triclass.hardware.Start.Builder builderForValue) {
      if (startBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        startBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 开始会议
     * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
     * </pre>
     *
     * <code>.triclass.hardware.Start start = 1;</code>
     */
    public Builder mergeStart(com.triclass.hardware.Start value) {
      if (startBuilder_ == null) {
        if (actionCase_ == 1 &&
            action_ != com.triclass.hardware.Start.getDefaultInstance()) {
          action_ = com.triclass.hardware.Start.newBuilder((com.triclass.hardware.Start) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 1) {
          startBuilder_.mergeFrom(value);
        }
        startBuilder_.setMessage(value);
      }
      actionCase_ = 1;
      return this;
    }
    /**
     * <pre>
     * 开始会议
     * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
     * </pre>
     *
     * <code>.triclass.hardware.Start start = 1;</code>
     */
    public Builder clearStart() {
      if (startBuilder_ == null) {
        if (actionCase_ == 1) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 1) {
          actionCase_ = 0;
          action_ = null;
        }
        startBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 开始会议
     * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
     * </pre>
     *
     * <code>.triclass.hardware.Start start = 1;</code>
     */
    public com.triclass.hardware.Start.Builder getStartBuilder() {
      return getStartFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 开始会议
     * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
     * </pre>
     *
     * <code>.triclass.hardware.Start start = 1;</code>
     */
    @java.lang.Override
    public com.triclass.hardware.StartOrBuilder getStartOrBuilder() {
      if ((actionCase_ == 1) && (startBuilder_ != null)) {
        return startBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 1) {
          return (com.triclass.hardware.Start) action_;
        }
        return com.triclass.hardware.Start.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 开始会议
     * 收到该请求后，硬件设备应该立即调起摄像头、麦克风等设备且立即加入会议
     * </pre>
     *
     * <code>.triclass.hardware.Start start = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Start, com.triclass.hardware.Start.Builder, com.triclass.hardware.StartOrBuilder> 
        getStartFieldBuilder() {
      if (startBuilder_ == null) {
        if (!(actionCase_ == 1)) {
          action_ = com.triclass.hardware.Start.getDefaultInstance();
        }
        startBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.triclass.hardware.Start, com.triclass.hardware.Start.Builder, com.triclass.hardware.StartOrBuilder>(
                (com.triclass.hardware.Start) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 1;
      onChanged();;
      return startBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Terminate, com.triclass.hardware.Terminate.Builder, com.triclass.hardware.TerminateOrBuilder> terminateBuilder_;
    /**
     * <pre>
     * 结束会议
     * </pre>
     *
     * <code>.triclass.hardware.Terminate terminate = 2;</code>
     * @return Whether the terminate field is set.
     */
    @java.lang.Override
    public boolean hasTerminate() {
      return actionCase_ == 2;
    }
    /**
     * <pre>
     * 结束会议
     * </pre>
     *
     * <code>.triclass.hardware.Terminate terminate = 2;</code>
     * @return The terminate.
     */
    @java.lang.Override
    public com.triclass.hardware.Terminate getTerminate() {
      if (terminateBuilder_ == null) {
        if (actionCase_ == 2) {
          return (com.triclass.hardware.Terminate) action_;
        }
        return com.triclass.hardware.Terminate.getDefaultInstance();
      } else {
        if (actionCase_ == 2) {
          return terminateBuilder_.getMessage();
        }
        return com.triclass.hardware.Terminate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 结束会议
     * </pre>
     *
     * <code>.triclass.hardware.Terminate terminate = 2;</code>
     */
    public Builder setTerminate(com.triclass.hardware.Terminate value) {
      if (terminateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        terminateBuilder_.setMessage(value);
      }
      actionCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * 结束会议
     * </pre>
     *
     * <code>.triclass.hardware.Terminate terminate = 2;</code>
     */
    public Builder setTerminate(
        com.triclass.hardware.Terminate.Builder builderForValue) {
      if (terminateBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        terminateBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * 结束会议
     * </pre>
     *
     * <code>.triclass.hardware.Terminate terminate = 2;</code>
     */
    public Builder mergeTerminate(com.triclass.hardware.Terminate value) {
      if (terminateBuilder_ == null) {
        if (actionCase_ == 2 &&
            action_ != com.triclass.hardware.Terminate.getDefaultInstance()) {
          action_ = com.triclass.hardware.Terminate.newBuilder((com.triclass.hardware.Terminate) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 2) {
          terminateBuilder_.mergeFrom(value);
        }
        terminateBuilder_.setMessage(value);
      }
      actionCase_ = 2;
      return this;
    }
    /**
     * <pre>
     * 结束会议
     * </pre>
     *
     * <code>.triclass.hardware.Terminate terminate = 2;</code>
     */
    public Builder clearTerminate() {
      if (terminateBuilder_ == null) {
        if (actionCase_ == 2) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 2) {
          actionCase_ = 0;
          action_ = null;
        }
        terminateBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 结束会议
     * </pre>
     *
     * <code>.triclass.hardware.Terminate terminate = 2;</code>
     */
    public com.triclass.hardware.Terminate.Builder getTerminateBuilder() {
      return getTerminateFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 结束会议
     * </pre>
     *
     * <code>.triclass.hardware.Terminate terminate = 2;</code>
     */
    @java.lang.Override
    public com.triclass.hardware.TerminateOrBuilder getTerminateOrBuilder() {
      if ((actionCase_ == 2) && (terminateBuilder_ != null)) {
        return terminateBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 2) {
          return (com.triclass.hardware.Terminate) action_;
        }
        return com.triclass.hardware.Terminate.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 结束会议
     * </pre>
     *
     * <code>.triclass.hardware.Terminate terminate = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Terminate, com.triclass.hardware.Terminate.Builder, com.triclass.hardware.TerminateOrBuilder> 
        getTerminateFieldBuilder() {
      if (terminateBuilder_ == null) {
        if (!(actionCase_ == 2)) {
          action_ = com.triclass.hardware.Terminate.getDefaultInstance();
        }
        terminateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.triclass.hardware.Terminate, com.triclass.hardware.Terminate.Builder, com.triclass.hardware.TerminateOrBuilder>(
                (com.triclass.hardware.Terminate) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 2;
      onChanged();;
      return terminateBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Video, com.triclass.hardware.Video.Builder, com.triclass.hardware.VideoOrBuilder> videoBuilder_;
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>.triclass.hardware.Video video = 3;</code>
     * @return Whether the video field is set.
     */
    @java.lang.Override
    public boolean hasVideo() {
      return actionCase_ == 3;
    }
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>.triclass.hardware.Video video = 3;</code>
     * @return The video.
     */
    @java.lang.Override
    public com.triclass.hardware.Video getVideo() {
      if (videoBuilder_ == null) {
        if (actionCase_ == 3) {
          return (com.triclass.hardware.Video) action_;
        }
        return com.triclass.hardware.Video.getDefaultInstance();
      } else {
        if (actionCase_ == 3) {
          return videoBuilder_.getMessage();
        }
        return com.triclass.hardware.Video.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>.triclass.hardware.Video video = 3;</code>
     */
    public Builder setVideo(com.triclass.hardware.Video value) {
      if (videoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        videoBuilder_.setMessage(value);
      }
      actionCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>.triclass.hardware.Video video = 3;</code>
     */
    public Builder setVideo(
        com.triclass.hardware.Video.Builder builderForValue) {
      if (videoBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        videoBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>.triclass.hardware.Video video = 3;</code>
     */
    public Builder mergeVideo(com.triclass.hardware.Video value) {
      if (videoBuilder_ == null) {
        if (actionCase_ == 3 &&
            action_ != com.triclass.hardware.Video.getDefaultInstance()) {
          action_ = com.triclass.hardware.Video.newBuilder((com.triclass.hardware.Video) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 3) {
          videoBuilder_.mergeFrom(value);
        }
        videoBuilder_.setMessage(value);
      }
      actionCase_ = 3;
      return this;
    }
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>.triclass.hardware.Video video = 3;</code>
     */
    public Builder clearVideo() {
      if (videoBuilder_ == null) {
        if (actionCase_ == 3) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 3) {
          actionCase_ = 0;
          action_ = null;
        }
        videoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>.triclass.hardware.Video video = 3;</code>
     */
    public com.triclass.hardware.Video.Builder getVideoBuilder() {
      return getVideoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>.triclass.hardware.Video video = 3;</code>
     */
    @java.lang.Override
    public com.triclass.hardware.VideoOrBuilder getVideoOrBuilder() {
      if ((actionCase_ == 3) && (videoBuilder_ != null)) {
        return videoBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 3) {
          return (com.triclass.hardware.Video) action_;
        }
        return com.triclass.hardware.Video.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 视频
     * </pre>
     *
     * <code>.triclass.hardware.Video video = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Video, com.triclass.hardware.Video.Builder, com.triclass.hardware.VideoOrBuilder> 
        getVideoFieldBuilder() {
      if (videoBuilder_ == null) {
        if (!(actionCase_ == 3)) {
          action_ = com.triclass.hardware.Video.getDefaultInstance();
        }
        videoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.triclass.hardware.Video, com.triclass.hardware.Video.Builder, com.triclass.hardware.VideoOrBuilder>(
                (com.triclass.hardware.Video) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 3;
      onChanged();;
      return videoBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Microphone, com.triclass.hardware.Microphone.Builder, com.triclass.hardware.MicrophoneOrBuilder> microphoneBuilder_;
    /**
     * <pre>
     * 麦克风
     * </pre>
     *
     * <code>.triclass.hardware.Microphone microphone = 4;</code>
     * @return Whether the microphone field is set.
     */
    @java.lang.Override
    public boolean hasMicrophone() {
      return actionCase_ == 4;
    }
    /**
     * <pre>
     * 麦克风
     * </pre>
     *
     * <code>.triclass.hardware.Microphone microphone = 4;</code>
     * @return The microphone.
     */
    @java.lang.Override
    public com.triclass.hardware.Microphone getMicrophone() {
      if (microphoneBuilder_ == null) {
        if (actionCase_ == 4) {
          return (com.triclass.hardware.Microphone) action_;
        }
        return com.triclass.hardware.Microphone.getDefaultInstance();
      } else {
        if (actionCase_ == 4) {
          return microphoneBuilder_.getMessage();
        }
        return com.triclass.hardware.Microphone.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 麦克风
     * </pre>
     *
     * <code>.triclass.hardware.Microphone microphone = 4;</code>
     */
    public Builder setMicrophone(com.triclass.hardware.Microphone value) {
      if (microphoneBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        microphoneBuilder_.setMessage(value);
      }
      actionCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * 麦克风
     * </pre>
     *
     * <code>.triclass.hardware.Microphone microphone = 4;</code>
     */
    public Builder setMicrophone(
        com.triclass.hardware.Microphone.Builder builderForValue) {
      if (microphoneBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        microphoneBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * 麦克风
     * </pre>
     *
     * <code>.triclass.hardware.Microphone microphone = 4;</code>
     */
    public Builder mergeMicrophone(com.triclass.hardware.Microphone value) {
      if (microphoneBuilder_ == null) {
        if (actionCase_ == 4 &&
            action_ != com.triclass.hardware.Microphone.getDefaultInstance()) {
          action_ = com.triclass.hardware.Microphone.newBuilder((com.triclass.hardware.Microphone) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 4) {
          microphoneBuilder_.mergeFrom(value);
        }
        microphoneBuilder_.setMessage(value);
      }
      actionCase_ = 4;
      return this;
    }
    /**
     * <pre>
     * 麦克风
     * </pre>
     *
     * <code>.triclass.hardware.Microphone microphone = 4;</code>
     */
    public Builder clearMicrophone() {
      if (microphoneBuilder_ == null) {
        if (actionCase_ == 4) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 4) {
          actionCase_ = 0;
          action_ = null;
        }
        microphoneBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 麦克风
     * </pre>
     *
     * <code>.triclass.hardware.Microphone microphone = 4;</code>
     */
    public com.triclass.hardware.Microphone.Builder getMicrophoneBuilder() {
      return getMicrophoneFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 麦克风
     * </pre>
     *
     * <code>.triclass.hardware.Microphone microphone = 4;</code>
     */
    @java.lang.Override
    public com.triclass.hardware.MicrophoneOrBuilder getMicrophoneOrBuilder() {
      if ((actionCase_ == 4) && (microphoneBuilder_ != null)) {
        return microphoneBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 4) {
          return (com.triclass.hardware.Microphone) action_;
        }
        return com.triclass.hardware.Microphone.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 麦克风
     * </pre>
     *
     * <code>.triclass.hardware.Microphone microphone = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Microphone, com.triclass.hardware.Microphone.Builder, com.triclass.hardware.MicrophoneOrBuilder> 
        getMicrophoneFieldBuilder() {
      if (microphoneBuilder_ == null) {
        if (!(actionCase_ == 4)) {
          action_ = com.triclass.hardware.Microphone.getDefaultInstance();
        }
        microphoneBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.triclass.hardware.Microphone, com.triclass.hardware.Microphone.Builder, com.triclass.hardware.MicrophoneOrBuilder>(
                (com.triclass.hardware.Microphone) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 4;
      onChanged();;
      return microphoneBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Audio, com.triclass.hardware.Audio.Builder, com.triclass.hardware.AudioOrBuilder> audioBuilder_;
    /**
     * <pre>
     * 音频
     * </pre>
     *
     * <code>.triclass.hardware.Audio audio = 5;</code>
     * @return Whether the audio field is set.
     */
    @java.lang.Override
    public boolean hasAudio() {
      return actionCase_ == 5;
    }
    /**
     * <pre>
     * 音频
     * </pre>
     *
     * <code>.triclass.hardware.Audio audio = 5;</code>
     * @return The audio.
     */
    @java.lang.Override
    public com.triclass.hardware.Audio getAudio() {
      if (audioBuilder_ == null) {
        if (actionCase_ == 5) {
          return (com.triclass.hardware.Audio) action_;
        }
        return com.triclass.hardware.Audio.getDefaultInstance();
      } else {
        if (actionCase_ == 5) {
          return audioBuilder_.getMessage();
        }
        return com.triclass.hardware.Audio.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 音频
     * </pre>
     *
     * <code>.triclass.hardware.Audio audio = 5;</code>
     */
    public Builder setAudio(com.triclass.hardware.Audio value) {
      if (audioBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        action_ = value;
        onChanged();
      } else {
        audioBuilder_.setMessage(value);
      }
      actionCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * 音频
     * </pre>
     *
     * <code>.triclass.hardware.Audio audio = 5;</code>
     */
    public Builder setAudio(
        com.triclass.hardware.Audio.Builder builderForValue) {
      if (audioBuilder_ == null) {
        action_ = builderForValue.build();
        onChanged();
      } else {
        audioBuilder_.setMessage(builderForValue.build());
      }
      actionCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * 音频
     * </pre>
     *
     * <code>.triclass.hardware.Audio audio = 5;</code>
     */
    public Builder mergeAudio(com.triclass.hardware.Audio value) {
      if (audioBuilder_ == null) {
        if (actionCase_ == 5 &&
            action_ != com.triclass.hardware.Audio.getDefaultInstance()) {
          action_ = com.triclass.hardware.Audio.newBuilder((com.triclass.hardware.Audio) action_)
              .mergeFrom(value).buildPartial();
        } else {
          action_ = value;
        }
        onChanged();
      } else {
        if (actionCase_ == 5) {
          audioBuilder_.mergeFrom(value);
        }
        audioBuilder_.setMessage(value);
      }
      actionCase_ = 5;
      return this;
    }
    /**
     * <pre>
     * 音频
     * </pre>
     *
     * <code>.triclass.hardware.Audio audio = 5;</code>
     */
    public Builder clearAudio() {
      if (audioBuilder_ == null) {
        if (actionCase_ == 5) {
          actionCase_ = 0;
          action_ = null;
          onChanged();
        }
      } else {
        if (actionCase_ == 5) {
          actionCase_ = 0;
          action_ = null;
        }
        audioBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 音频
     * </pre>
     *
     * <code>.triclass.hardware.Audio audio = 5;</code>
     */
    public com.triclass.hardware.Audio.Builder getAudioBuilder() {
      return getAudioFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 音频
     * </pre>
     *
     * <code>.triclass.hardware.Audio audio = 5;</code>
     */
    @java.lang.Override
    public com.triclass.hardware.AudioOrBuilder getAudioOrBuilder() {
      if ((actionCase_ == 5) && (audioBuilder_ != null)) {
        return audioBuilder_.getMessageOrBuilder();
      } else {
        if (actionCase_ == 5) {
          return (com.triclass.hardware.Audio) action_;
        }
        return com.triclass.hardware.Audio.getDefaultInstance();
      }
    }
    /**
     * <pre>
     * 音频
     * </pre>
     *
     * <code>.triclass.hardware.Audio audio = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.triclass.hardware.Audio, com.triclass.hardware.Audio.Builder, com.triclass.hardware.AudioOrBuilder> 
        getAudioFieldBuilder() {
      if (audioBuilder_ == null) {
        if (!(actionCase_ == 5)) {
          action_ = com.triclass.hardware.Audio.getDefaultInstance();
        }
        audioBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.triclass.hardware.Audio, com.triclass.hardware.Audio.Builder, com.triclass.hardware.AudioOrBuilder>(
                (com.triclass.hardware.Audio) action_,
                getParentForChildren(),
                isClean());
        action_ = null;
      }
      actionCase_ = 5;
      onChanged();;
      return audioBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:triclass.hardware.Course)
  }

  // @@protoc_insertion_point(class_scope:triclass.hardware.Course)
  private static final com.triclass.hardware.Course DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.triclass.hardware.Course();
  }

  public static com.triclass.hardware.Course getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Course>
      PARSER = new com.google.protobuf.AbstractParser<Course>() {
    @java.lang.Override
    public Course parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Course(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Course> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Course> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.triclass.hardware.Course getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

